# # version: '3.8'

# # x-airflow-common:
# #   &airflow-common
# #   image: apache/airflow:3.0.6
# #   environment: &airflow-common-env
# #     AIRFLOW__CORE__EXECUTOR: LocalExecutor
# #     AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
# #     AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
# #     AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
# #     AIRFLOW__API__SECRET_KEY: 'airflow'
# #     AIRFLOW__AUTH__BACKEND: 'airflow.auth.backends.basic_auth'
# #     AIRFLOW__WEBSERVER__AUTHENTICATE: 'false'
# #     _AIRFLOW_DB_MIGRATE: 'true'
# #     _AIRFLOW_WWW_USER_CREATE: 'true'
# #     _AIRFLOW_WWW_USER_USERNAME: 'admin'
# #     _AIRFLOW_WWW_USER_PASSWORD: 'admin'
# #   volumes:
# #     - ./dags:/opt/airflow/dags
# #     - ./logs:/opt/airflow/logs
# #     - ./plugins:/opt/airflow/plugins
# #   user: "${AIRFLOW_UID:-50000}:0"
# #   depends_on:
# #     postgres:
# #       condition: service_healthy

# # services:
# #   postgres:
# #     image: postgres:15
# #     environment:
# #       POSTGRES_USER: airflow
# #       POSTGRES_PASSWORD: airflow
# #       POSTGRES_DB: airflow
# #     volumes:
# #       - postgres_data:/var/lib/postgresql/data
# #     healthcheck:
# #       test: ["CMD", "pg_isready", "-U", "airflow"]
# #       interval: 5s
# #       retries: 5
# #     restart: always

# #   airflow-webserver:
# #     <<: *airflow-common
# #     command: api-server
# #     ports:
# #       - 8080:8080
# #     healthcheck:
# #       test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
# #       interval: 30s
# #       timeout: 10s
# #       retries: 3
# #     restart: always

# #   airflow-scheduler:
# #     <<: *airflow-common
# #     command: scheduler
# #     restart: always

# # volumes:
# #   postgres_data:

# version: '3.8'

# x-airflow-common:
#   &airflow-common
#   image: apache/airflow:3.0.6
#   environment: &airflow-common-env
#     AIRFLOW__CORE__EXECUTOR: LocalExecutor
#     AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
#     AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
#     AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
#     AIRFLOW__API__SECRET_KEY: 'airflow'
#     AIRFLOW__AUTH__BACKEND: 'airflow.auth.backends.basic_auth'
#     AIRFLOW__WEBSERVER__AUTHENTICATE: 'false'
#     _AIRFLOW_DB_MIGRATE: 'true'
#     _AIRFLOW_WWW_USER_CREATE: 'true'
#     _AIRFLOW_WWW_USER_USERNAME: 'admin'
#     _AIRFLOW_WWW_USER_PASSWORD: 'admin'
#   volumes:
#     - ./dags:/opt/airflow/dags
#     - ./logs:/opt/airflow/logs
#     - ./plugins:/opt/airflow/plugins
#   user: "${AIRFLOW_UID:-50000}:0"
#   depends_on:
#     postgres:
#       condition: service_healthy

# services:
#   postgres:
#     image: postgres:15
#     environment:
#       POSTGRES_USER: airflow
#       POSTGRES_PASSWORD: airflow
#       POSTGRES_DB: airflow
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "airflow"]
#       interval: 5s
#       retries: 5
#     restart: always

#   airflow-standalone:
#     <<: *airflow-common
#     command: standalone
#     ports:
#       - 8080:8080
#     healthcheck:
#       test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#     restart: always

# volumes:
#   postgres_data:

version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:3.0.6
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:bens@postgres/crypto_app
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__API__SECRET_KEY: 'airflow'
    AIRFLOW__AUTH__BACKEND: 'airflow.auth.backends.basic_auth'
    AIRFLOW__WEBSERVER__AUTHENTICATE: 'false'
    _AIRFLOW_DB_MIGRATE: 'true'
    _AIRFLOW_WWW_USER_CREATE: 'true'
    _AIRFLOW_WWW_USER_USERNAME: 'admin'
    _AIRFLOW_WWW_USER_PASSWORD: 'admin'
    PYTHONPATH: "/opt/airflow/dags:/opt/airflow/crypto-app"
    _PIP_ADDITIONAL_REQUIREMENTS: "yfinance pandas psycopg2-binary python-dotenv"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ../:/opt/airflow/crypto-app
    - ../.env:/opt/airflow/.env
    - /Users/apple/Desktop/DEV/PORTFOLIO/crypto-app:/opt/airflow/crypto-app
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bens
      POSTGRES_DB: crypto_app
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
    restart: always

  airflow-standalone:
    <<: *airflow-common
    command: standalone
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

volumes:
  postgres_data: